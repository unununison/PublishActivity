// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PublishActivity.Data.Models;

#nullable disable

namespace PublishActivity.Data.Migrations
{
    [DbContext(typeof(BasePpsContext))]
    partial class BasePpsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PublishActivity.Data.Models.AnalyticalBase", b =>
                {
                    b.Property<int>("IdAbase")
                        .HasColumnType("int")
                        .HasColumnName("id_ABase");

                    b.Property<string>("NameAbase")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Name_ABase");

                    b.HasKey("IdAbase")
                        .HasName("AnalyticalBase_PK");

                    b.ToTable("AnalyticalBase", (string)null);
                });

            modelBuilder.Entity("PublishActivity.Data.Models.Aut", b =>
                {
                    b.Property<int>("IdAut")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_aut");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAut"));

                    b.Property<string>("Fam")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("IdExp")
                        .HasColumnType("int")
                        .HasColumnName("id_exp");

                    b.Property<string>("Nam1")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Nam2")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("IdAut");

                    b.ToTable("aut", (string)null);
                });

            modelBuilder.Entity("PublishActivity.Data.Models.AutStructurPart", b =>
                {
                    b.Property<int>("AuthorUid")
                        .HasColumnType("int")
                        .HasColumnName("Author_UID");

                    b.Property<int>("EditionIdEdt")
                        .HasColumnType("int")
                        .HasColumnName("edition_id_Edt");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("JobName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("NameOffice")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Name_office");

                    b.Property<string>("NamePart")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("Name_part");

                    b.Property<string>("OfficeDepartKodOffice")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Office_depart_kod_office");

                    b.Property<string>("Patronymic")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("StructuralPartIdPart")
                        .HasColumnType("int")
                        .HasColumnName("structural_part_id_part");

                    b.Property<int>("Uid")
                        .HasColumnType("int")
                        .HasColumnName("UID");

                    b.ToTable((string)null);

                    b.ToView("Aut_structurPart", (string)null);
                });

            modelBuilder.Entity("PublishActivity.Data.Models.Author", b =>
                {
                    b.Property<int>("Uid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Uid"));

                    b.Property<string>("Country")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Email")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("email");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("JobName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("OfficeDepartKodOffice")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Office_depart_kod_office");

                    b.Property<string>("Patronymic")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Phone_Number");

                    b.Property<string>("TabNum")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)")
                        .HasColumnName("Tab_num");

                    b.Property<string>("YearBirth")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("Year_birth");

                    b.HasKey("Uid")
                        .HasName("Author_PK");

                    b.HasIndex("OfficeDepartKodOffice");

                    b.ToTable("Author", (string)null);
                });

            modelBuilder.Entity("PublishActivity.Data.Models.AuthorBook", b =>
                {
                    b.Property<string>("AuthorPartB")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Author_PartB");

                    b.Property<int>("AuthorUid")
                        .HasColumnType("int")
                        .HasColumnName("Author_UID");

                    b.Property<int>("EdnIdEdt")
                        .HasColumnType("int")
                        .HasColumnName("EDN_id_Edt");

                    b.HasIndex("AuthorUid");

                    b.HasIndex("EdnIdEdt");

                    b.ToTable("Author_book", (string)null);
                });

            modelBuilder.Entity("PublishActivity.Data.Models.AuthorPubl", b =>
                {
                    b.Property<int>("AuthorUid")
                        .HasColumnType("int")
                        .HasColumnName("Author_UID");

                    b.Property<string>("AuthorsPartA")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Authors_PartA");

                    b.Property<int>("StructuralPartIdPart")
                        .HasColumnType("int")
                        .HasColumnName("structural_part_id_part");

                    b.HasIndex("AuthorUid");

                    b.HasIndex("StructuralPartIdPart");

                    b.ToTable("Author_publ", (string)null);
                });

            modelBuilder.Entity("PublishActivity.Data.Models.AuthorStructPub", b =>
                {
                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("NamePart")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("Name_part");

                    b.Property<string>("OfficeDepartKodOffice")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Office_depart_kod_office");

                    b.Property<string>("Patronymic")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("Uid")
                        .HasColumnType("int")
                        .HasColumnName("uid");

                    b.ToTable((string)null);

                    b.ToView("Author_struct_pub", (string)null);
                });

            modelBuilder.Entity("PublishActivity.Data.Models.CategoryEdit", b =>
                {
                    b.Property<int>("EditionIdEdt")
                        .HasColumnType("int")
                        .HasColumnName("edition_id_Edt");

                    b.Property<string>("KodHeading")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("kod_heading");

                    b.Property<string>("NameArea")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name_area");

                    b.Property<int>("SprHeadingIdHeading")
                        .HasColumnType("int")
                        .HasColumnName("Spr_heading_id_heading");

                    b.HasIndex("EditionIdEdt");

                    b.HasIndex("SprHeadingIdHeading");

                    b.ToTable("category_edit", (string)null);
                });

            modelBuilder.Entity("PublishActivity.Data.Models.D", b =>
                {
                    b.Property<string>("Ds")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("DS");

                    b.Property<string>("Fio")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("FIO");

                    b.Property<string>("FioTranslit")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("FIO_translit");

                    b.Property<string>("Ns")
                        .HasMaxLength(12)
                        .HasColumnType("nchar(12)")
                        .HasColumnName("NS")
                        .IsFixedLength();

                    b.ToTable("DS", (string)null);
                });

            modelBuilder.Entity("PublishActivity.Data.Models.DboTmpTable", b =>
                {
                    b.Property<DateTime?>("DataExport")
                        .HasColumnType("datetime")
                        .HasColumnName("data_export");

                    b.Property<DateTime?>("DataImport")
                        .HasColumnType("datetime")
                        .HasColumnName("data_import");

                    b.Property<string>("DoiEd")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DOI_ED");

                    b.Property<int>("IdExport")
                        .HasColumnType("int")
                        .HasColumnName("id_export");

                    b.Property<string>("Isbn")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ISBN");

                    b.Property<string>("Issn")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ISSN");

                    b.Property<string>("LanguagePart")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("language_part");

                    b.Property<string>("NameAbase")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name_ABase");

                    b.Property<string>("NameAuthorEn")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NameAuthor_EN");

                    b.Property<string>("NameAuthorRu")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NameAuthor_RU");

                    b.Property<string>("NameEdt")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name_Edt");

                    b.Property<string>("NamePart")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name_part");

                    b.Property<string>("NamePdo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name_PDO");

                    b.Property<string>("NameStruct")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PageBg")
                        .HasColumnType("int");

                    b.Property<string>("PageCount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PageEnd")
                        .HasColumnType("int");

                    b.Property<string>("Release")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlIsi")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("URL_ISI");

                    b.Property<int?>("ValumeIndA")
                        .HasColumnType("int")
                        .HasColumnName("Valume_IndA");

                    b.Property<string>("ValumeUia")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Valume_UIA");

                    b.Property<string>("Year")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("dbo.tmp_table", (string)null);
                });

            modelBuilder.Entity("PublishActivity.Data.Models.Edition", b =>
                {
                    b.Property<int>("IdEdt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_Edt");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEdt"));

                    b.Property<string>("Coverage")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("DateEdit")
                        .HasColumnType("date")
                        .HasColumnName("Date_Edit");

                    b.Property<DateTime?>("DateExtract")
                        .HasColumnType("date")
                        .HasColumnName("Date_Extract");

                    b.Property<string>("DoiEd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DOI_ED");

                    b.Property<int?>("EdnIdLanguage")
                        .HasColumnType("int")
                        .HasColumnName("EDN_id_language");

                    b.Property<int>("EdnIdPbo")
                        .HasColumnType("int")
                        .HasColumnName("EDN_id_PBO");

                    b.Property<string>("EdnTypeEd")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("EDN_type_ed");

                    b.Property<int?>("IdEdition")
                        .HasColumnType("int")
                        .HasColumnName("id_edition");

                    b.Property<string>("Isbn")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("ISBN");

                    b.Property<string>("Issn")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ISSN");

                    b.Property<string>("IssnO")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)")
                        .HasColumnName("ISSN_O");

                    b.Property<string>("NameEdt")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Name_Edt");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Region")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Regularity")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Release")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("SprFormatInfoTypeEd")
                        .HasColumnType("int")
                        .HasColumnName("Spr_formatInfo_Type_ED");

                    b.Property<string>("Town")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TypeAccess")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Type_Access");

                    b.Property<string>("UrlIsi")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("URL_ISI");

                    b.Property<string>("UserId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("User_id");

                    b.Property<int?>("Volume")
                        .HasColumnType("int");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("IdEdt")
                        .HasName("edition_PK");

                    b.HasIndex("EdnIdLanguage");

                    b.HasIndex("EdnIdPbo");

                    b.HasIndex("IdEdition");

                    b.HasIndex("SprFormatInfoTypeEd");

                    b.ToTable("edition", (string)null);
                });

            modelBuilder.Entity("PublishActivity.Data.Models.IdAuthor", b =>
                {
                    b.Property<int>("AuthorUid")
                        .HasColumnType("int")
                        .HasColumnName("Author_UID");

                    b.Property<int>("SprIdAuthorsIdIas")
                        .HasColumnType("int")
                        .HasColumnName("Spr_idAuthors_id_IAS");

                    b.HasIndex("AuthorUid");

                    b.HasIndex("SprIdAuthorsIdIas");

                    b.ToTable("id_Author", (string)null);
                });

            modelBuilder.Entity("PublishActivity.Data.Models.IndArticle", b =>
                {
                    b.Property<int>("IdIndPrt")
                        .HasColumnType("int")
                        .HasColumnName("id_IndPrt");

                    b.Property<int>("AnalyticalBaseIdAbase")
                        .HasColumnType("int")
                        .HasColumnName("AnalyticalBase_id_ABase");

                    b.Property<string>("NameIndPrt")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name_IndPrt");

                    b.HasKey("IdIndPrt")
                        .HasName("IndArticles_PK");

                    b.HasIndex("AnalyticalBaseIdAbase");

                    b.ToTable("IndArticles");
                });

            modelBuilder.Entity("PublishActivity.Data.Models.IndJournal", b =>
                {
                    b.Property<int>("IdIndJ")
                        .HasColumnType("int")
                        .HasColumnName("id_IndJ");

                    b.Property<int>("AnalyticalBaseIdAbase")
                        .HasColumnType("int")
                        .HasColumnName("AnalyticalBase_id_ABase");

                    b.Property<string>("NameIndJ")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name_IndJ");

                    b.HasKey("IdIndJ")
                        .HasName("Ind_Journal_PK");

                    b.HasIndex("AnalyticalBaseIdAbase");

                    b.ToTable("Ind_Journal", (string)null);
                });

            modelBuilder.Entity("PublishActivity.Data.Models.IndicatArticle", b =>
                {
                    b.Property<DateTime?>("DateEditA")
                        .HasColumnType("date")
                        .HasColumnName("Date_EditA");

                    b.Property<int>("IndArticlesIdIndPrt")
                        .HasColumnType("int")
                        .HasColumnName("IndArticles_id_IndPrt");

                    b.Property<int>("StructuralPartIdPart")
                        .HasColumnType("int")
                        .HasColumnName("structural_part_id_part");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_id");

                    b.Property<int>("ValumeIndA")
                        .HasColumnType("int")
                        .HasColumnName("Valume_IndA");

                    b.HasIndex("IndArticlesIdIndPrt");

                    b.HasIndex("StructuralPartIdPart");

                    b.ToTable("indicat_articles", (string)null);
                });

            modelBuilder.Entity("PublishActivity.Data.Models.Language", b =>
                {
                    b.Property<int>("IdLanguage")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_language");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLanguage"));

                    b.Property<string>("NameLang")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name_lang");

                    b.Property<string>("NameLang1")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name_lang1");

                    b.HasKey("IdLanguage")
                        .HasName("language_PK");

                    b.ToTable("language", (string)null);
                });

            modelBuilder.Entity("PublishActivity.Data.Models.LevelEdition", b =>
                {
                    b.Property<int>("IdEdition")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_edition");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEdition"));

                    b.Property<string>("NameLevEdition")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name_levEdition");

                    b.HasKey("IdEdition")
                        .HasName("level_Edition_PK");

                    b.ToTable("level_Edition", (string)null);
                });

            modelBuilder.Entity("PublishActivity.Data.Models.OfficeDepart", b =>
                {
                    b.Property<string>("KodOffice")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("kod_office");

                    b.Property<bool>("Active")
                        .HasColumnType("bit")
                        .HasColumnName("active");

                    b.Property<string>("KodParent")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)")
                        .HasColumnName("kod_parent");

                    b.Property<string>("NameOffice")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)")
                        .HasColumnName("Name_office");

                    b.Property<int?>("TypeOffice")
                        .HasColumnType("int")
                        .HasColumnName("type_office");

                    b.HasKey("KodOffice")
                        .HasName("Office_depart_PK");

                    b.ToTable("Office_depart", (string)null);
                });

            modelBuilder.Entity("PublishActivity.Data.Models.PublishingOffice", b =>
                {
                    b.Property<int>("IdPbo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_PBO");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPbo"));

                    b.Property<string>("NamePdo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Name_PDO");

                    b.Property<string>("Region")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Town")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdPbo")
                        .HasName("publishing_office_PK");

                    b.ToTable("publishing_office", (string)null);
                });

            modelBuilder.Entity("PublishActivity.Data.Models.RetingJournal", b =>
                {
                    b.Property<DateTime?>("DateEditJ")
                        .HasColumnType("date")
                        .HasColumnName("Date_EditJ");

                    b.Property<int?>("IdEdt")
                        .HasColumnType("int")
                        .HasColumnName("id_Edt");

                    b.Property<int>("IndJournalIdIndJ")
                        .HasColumnType("int")
                        .HasColumnName("Ind_Journal_id_IndJ");

                    b.Property<string>("SubjectArea")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Subject_area");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_id");

                    b.Property<decimal>("ValumeInd")
                        .HasColumnType("decimal(5, 4)")
                        .HasColumnName("Valume_Ind");

                    b.Property<string>("YearJ")
                        .HasMaxLength(4)
                        .IsUnicode(false)
                        .HasColumnType("varchar(4)")
                        .HasColumnName("yearJ");

                    b.HasIndex("IdEdt");

                    b.HasIndex("IndJournalIdIndJ");

                    b.ToTable("reting_Journal", (string)null);
                });

            modelBuilder.Entity("PublishActivity.Data.Models.SprFormatInfo", b =>
                {
                    b.Property<int>("TypeEd")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Type_ED");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TypeEd"));

                    b.Property<string>("NameNlnform")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name_nlnform");

                    b.HasKey("TypeEd")
                        .HasName("Spr_formatInfo_PK");

                    b.ToTable("Spr_formatInfo", (string)null);
                });

            modelBuilder.Entity("PublishActivity.Data.Models.SprHeading", b =>
                {
                    b.Property<int>("IdHeading")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_heading");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHeading"));

                    b.Property<string>("NameHeading")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name_heading");

                    b.HasKey("IdHeading")
                        .HasName("Spr_heading_PK");

                    b.ToTable("Spr_heading", (string)null);
                });

            modelBuilder.Entity("PublishActivity.Data.Models.SprIdAuthor", b =>
                {
                    b.Property<int>("IdIas")
                        .HasColumnType("int")
                        .HasColumnName("id_IAS");

                    b.Property<string>("NameIas")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name_IAS");

                    b.HasKey("IdIas")
                        .HasName("Spr_idAuthors_PK");

                    b.ToTable("Spr_idAuthors", (string)null);
                });

            modelBuilder.Entity("PublishActivity.Data.Models.SprIdEdition", b =>
                {
                    b.Property<int>("IdUia")
                        .HasColumnType("int")
                        .HasColumnName("id_UIA");

                    b.Property<string>("NameUia")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name_UIA");

                    b.HasKey("IdUia")
                        .HasName("Spr_IdEdition_PK");

                    b.ToTable("Spr_IdEdition", (string)null);
                });

            modelBuilder.Entity("PublishActivity.Data.Models.SprRole", b =>
                {
                    b.Property<int>("IdRole")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_role");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRole"));

                    b.Property<string>("NameRole")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name_role");

                    b.Property<string>("Note")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdRole");

                    b.ToTable("Spr_roles", (string)null);
                });

            modelBuilder.Entity("PublishActivity.Data.Models.SprStructure", b =>
                {
                    b.Property<int>("IdTypePart")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_TypePart");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdTypePart"));

                    b.Property<string>("NamePart")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Name_Part");

                    b.Property<string>("NamePart1")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Name_Part1");

                    b.HasKey("IdTypePart")
                        .HasName("Spr_structure_PK");

                    b.ToTable("Spr_structure", (string)null);
                });

            modelBuilder.Entity("PublishActivity.Data.Models.SprThematic", b =>
                {
                    b.Property<int>("IdThematic")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_thematic");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdThematic"));

                    b.Property<int>("IdHeading")
                        .HasColumnType("int")
                        .HasColumnName("id_heading");

                    b.Property<string>("NameThematic")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)")
                        .HasColumnName("Name_thematic");

                    b.HasKey("IdThematic");

                    b.HasIndex("IdHeading");

                    b.ToTable("Spr_thematic", (string)null);
                });

            modelBuilder.Entity("PublishActivity.Data.Models.SprUser", b =>
                {
                    b.Property<int>("IdUsers")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_users");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsers"));

                    b.Property<string>("FirstName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("IdRole")
                        .HasColumnType("int")
                        .HasColumnName("id_role");

                    b.Property<string>("LastName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("LoginUser")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("login_user");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Patronymic")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("PwdUser")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("pwd_user");

                    b.Property<int?>("Uid")
                        .HasColumnType("int")
                        .HasColumnName("UID");

                    b.HasKey("IdUsers");

                    b.HasIndex("IdRole");

                    b.ToTable("Spr_Users", (string)null);
                });

            modelBuilder.Entity("PublishActivity.Data.Models.StructuralPart", b =>
                {
                    b.Property<int>("IdPart")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_part");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPart"));

                    b.Property<int?>("CopyId")
                        .HasColumnType("int")
                        .HasColumnName("Copy_id");

                    b.Property<DateTime?>("DateEdA")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_EdA");

                    b.Property<DateTime?>("DateExtractA")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_ExtractA");

                    b.Property<DateTime?>("DateIns")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_Ins");

                    b.Property<int>("EditionIdEdt")
                        .HasColumnType("int")
                        .HasColumnName("edition_id_Edt");

                    b.Property<int?>("IdLanguage")
                        .HasColumnType("int")
                        .HasColumnName("id_language");

                    b.Property<string>("NamePart")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("Name_part");

                    b.Property<string>("NumArticle")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PageBg")
                        .HasColumnType("int");

                    b.Property<int>("PageCount")
                        .HasColumnType("int");

                    b.Property<int?>("PageEnd")
                        .HasColumnType("int");

                    b.Property<int>("SprStructureIdTypePart")
                        .HasColumnType("int")
                        .HasColumnName("Spr_structure_id_TypePart");

                    b.Property<string>("UrlArt")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("URL_Art");

                    b.Property<int?>("UserEdA")
                        .HasColumnType("int")
                        .HasColumnName("User_EdA");

                    b.Property<int?>("UserIns")
                        .HasColumnType("int")
                        .HasColumnName("User_Ins");

                    b.HasKey("IdPart")
                        .HasName("structural_part_PK");

                    b.HasIndex("EditionIdEdt");

                    b.HasIndex("IdLanguage");

                    b.HasIndex("SprStructureIdTypePart");

                    b.ToTable("structural_part", (string)null);
                });

            modelBuilder.Entity("PublishActivity.Data.Models.SubjectsHead", b =>
                {
                    b.Property<int>("IdThematic")
                        .HasColumnType("int")
                        .HasColumnName("id_thematic");

                    b.Property<int>("StructuralPartIdPart")
                        .HasColumnType("int")
                        .HasColumnName("structural_part_id_part");

                    b.HasIndex("IdThematic");

                    b.HasIndex("StructuralPartIdPart");

                    b.ToTable("Subjects_head", (string)null);
                });

            modelBuilder.Entity("PublishActivity.Data.Models.TmpExport", b =>
                {
                    b.Property<int>("IdExport")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_export");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdExport"));

                    b.Property<DateTime?>("DataExport")
                        .HasColumnType("datetime")
                        .HasColumnName("data_export");

                    b.Property<DateTime?>("DataImport")
                        .HasColumnType("datetime")
                        .HasColumnName("data_import");

                    b.Property<string>("DoiEd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DOI_ED");

                    b.Property<string>("Isbn")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("ISBN");

                    b.Property<string>("Issn")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ISSN");

                    b.Property<string>("LanguagePart")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("language_part");

                    b.Property<string>("NameAbase")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Name_ABase");

                    b.Property<string>("NameAuthorEn")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("NameAuthor_EN");

                    b.Property<string>("NameAuthorRu")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("NameAuthor_RU");

                    b.Property<string>("NameEdt")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Name_Edt");

                    b.Property<string>("NamePart")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name_part");

                    b.Property<string>("NamePdo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Name_PDO");

                    b.Property<string>("NameStruct")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("PageBg")
                        .HasColumnType("int");

                    b.Property<string>("PageCount")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("PageEnd")
                        .HasColumnType("int");

                    b.Property<string>("Release")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UrlIsi")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("URL_ISI");

                    b.Property<int?>("ValumeIndA")
                        .HasColumnType("int")
                        .HasColumnName("Valume_IndA");

                    b.Property<string>("ValumeUia")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Valume_UIA");

                    b.Property<string>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("IdExport");

                    b.ToTable("tmp_export", null, t =>
                        {
                            t.HasTrigger("tmp_export_INSERT");
                        });
                });

            modelBuilder.Entity("PublishActivity.Data.Models.TmpExport1", b =>
                {
                    b.Property<int>("IdExport")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_export");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdExport"));

                    b.Property<DateTime?>("DataExport")
                        .HasColumnType("datetime")
                        .HasColumnName("data_export");

                    b.Property<DateTime?>("DataImport")
                        .HasColumnType("datetime")
                        .HasColumnName("data_import");

                    b.Property<string>("DoiEd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DOI_ED");

                    b.Property<string>("Isbn")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("ISBN");

                    b.Property<string>("Issn")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ISSN");

                    b.Property<string>("LanguagePart")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("language_part");

                    b.Property<string>("NameAbase")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Name_ABase");

                    b.Property<string>("NameAuthorEn")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("NameAuthor_EN");

                    b.Property<string>("NameAuthorRu")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)")
                        .HasColumnName("NameAuthor_RU");

                    b.Property<string>("NameEdt")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Name_Edt");

                    b.Property<string>("NamePart")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Name_part");

                    b.Property<string>("NamePdo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Name_PDO");

                    b.Property<string>("NameStruct")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int?>("PageBg")
                        .HasColumnType("int");

                    b.Property<string>("PageCount")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("PageEnd")
                        .HasColumnType("int");

                    b.Property<string>("Release")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("UrlIsi")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("URL_ISI");

                    b.Property<int?>("ValumeIndA")
                        .HasColumnType("int")
                        .HasColumnName("Valume_IndA");

                    b.Property<string>("ValumeUia")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Valume_UIA");

                    b.Property<string>("Year")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.HasKey("IdExport");

                    b.ToTable("tmp_export1", (string)null);
                });

            modelBuilder.Entity("PublishActivity.Data.Models.UiaArticle", b =>
                {
                    b.Property<int>("SprIdEditionIdUia")
                        .HasColumnType("int")
                        .HasColumnName("Spr_IdEdition_id_UIA");

                    b.Property<int>("StructuralPartIdPart")
                        .HasColumnType("int")
                        .HasColumnName("structural_part_id_part");

                    b.Property<string>("ValumeUia")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("Valume_UIA");

                    b.HasIndex("SprIdEditionIdUia");

                    b.HasIndex("StructuralPartIdPart");

                    b.ToTable("UIA_articles", (string)null);
                });

            modelBuilder.Entity("PublishActivity.Data.Models.VOfficeDepart", b =>
                {
                    b.Property<string>("KodOffice")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("kod_office");

                    b.Property<string>("KodParent")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("kod_parent");

                    b.Property<string>("NameOffice")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Name_office");

                    b.ToTable((string)null);

                    b.ToView("V_Office_depart", (string)null);
                });

            modelBuilder.Entity("PublishActivity.Data.Models.VShtat", b =>
                {
                    b.Property<string>("Academic")
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)")
                        .HasColumnName("ACADEMIC");

                    b.Property<DateTime?>("DateStart")
                        .HasColumnType("datetime")
                        .HasColumnName("Date_start");

                    b.Property<string>("Fam")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("FAM");

                    b.Property<string>("Fio")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("FIO");

                    b.Property<bool?>("FlagIn")
                        .HasColumnType("bit")
                        .HasColumnName("Flag_in");

                    b.Property<bool?>("FlagOsn")
                        .HasColumnType("bit")
                        .HasColumnName("Flag_osn");

                    b.Property<bool?>("FlagOut")
                        .HasColumnType("bit")
                        .HasColumnName("Flag_out");

                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<string>("KodAGr")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("Kod_aGr");

                    b.Property<string>("KodDep")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("Kod_Dep");

                    b.Property<string>("Kval")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("kval");

                    b.Property<string>("Mgtucategory")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("MGTUCategory");

                    b.Property<string>("MgtucategoryCode")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("MGTUCategoryCode");

                    b.Property<string>("Nam1")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("NAM1");

                    b.Property<string>("Nam2")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("NAM2");

                    b.Property<string>("NameDep")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Name_Dep");

                    b.Property<string>("NameGr")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<double?>("Salary")
                        .HasColumnType("float")
                        .HasColumnName("salary");

                    b.Property<string>("Scstatus")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("SCSTATUS");

                    b.Property<string>("Sex")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)")
                        .HasColumnName("sex");

                    b.Property<string>("ShifrSotr")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)")
                        .HasColumnName("SHIFR_SOTR");

                    b.Property<string>("ShtatName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("shtat_name");

                    b.Property<string>("YearBirth")
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)")
                        .HasColumnName("Year_birth");

                    b.ToTable((string)null);

                    b.ToView("V_Shtat", (string)null);
                });

            modelBuilder.Entity("PublishActivity.Data.Models.ViewEdition", b =>
                {
                    b.Property<string>("Coverage")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("DateEdit")
                        .HasColumnType("date")
                        .HasColumnName("Date_Edit");

                    b.Property<DateTime?>("DateExtract")
                        .HasColumnType("date")
                        .HasColumnName("Date_Extract");

                    b.Property<string>("DoiEd")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("DOI_ED");

                    b.Property<string>("EdnTypeEd")
                        .IsRequired()
                        .HasMaxLength(6)
                        .HasColumnType("nvarchar(6)")
                        .HasColumnName("EDN_type_ed");

                    b.Property<int>("IdEdt")
                        .HasColumnType("int")
                        .HasColumnName("id_Edt");

                    b.Property<string>("Isbn")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("ISBN");

                    b.Property<string>("Issn")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)")
                        .HasColumnName("ISSN");

                    b.Property<string>("IssnO")
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)")
                        .HasColumnName("ISSN_O");

                    b.Property<string>("NameEdt")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Name_Edt");

                    b.Property<string>("NameLang")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name_lang");

                    b.Property<string>("NameLevEdition")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name_levEdition");

                    b.Property<string>("NameNlnform")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Name_nlnform");

                    b.Property<string>("NamePdo")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("Name_PDO");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("PublOffRegion")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PublOff_Region");

                    b.Property<string>("PublOffTown")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("PublOff_Town");

                    b.Property<string>("Region")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Regularity")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Release")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Town")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("TypeAccess")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Type_Access");

                    b.Property<string>("UrlIsi")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)")
                        .HasColumnName("URL_ISI");

                    b.Property<string>("UserId")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("User_id");

                    b.Property<int?>("Volume")
                        .HasColumnType("int");

                    b.Property<string>("Year")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.ToTable((string)null);

                    b.ToView("View_edition", (string)null);
                });

            modelBuilder.Entity("PublishActivity.Data.Models.Author", b =>
                {
                    b.HasOne("PublishActivity.Data.Models.OfficeDepart", "OfficeDepartKodOfficeNavigation")
                        .WithMany("Authors")
                        .HasForeignKey("OfficeDepartKodOffice")
                        .HasConstraintName("Author_Office_depart_FK");

                    b.Navigation("OfficeDepartKodOfficeNavigation");
                });

            modelBuilder.Entity("PublishActivity.Data.Models.AuthorBook", b =>
                {
                    b.HasOne("PublishActivity.Data.Models.Author", "AuthorU")
                        .WithMany()
                        .HasForeignKey("AuthorUid")
                        .IsRequired()
                        .HasConstraintName("Author_book_Author_FK");

                    b.HasOne("PublishActivity.Data.Models.Edition", "EdnIdEdtNavigation")
                        .WithMany()
                        .HasForeignKey("EdnIdEdt")
                        .IsRequired()
                        .HasConstraintName("FK_Author_book_edition");

                    b.Navigation("AuthorU");

                    b.Navigation("EdnIdEdtNavigation");
                });

            modelBuilder.Entity("PublishActivity.Data.Models.AuthorPubl", b =>
                {
                    b.HasOne("PublishActivity.Data.Models.Author", "AuthorU")
                        .WithMany()
                        .HasForeignKey("AuthorUid")
                        .IsRequired()
                        .HasConstraintName("Author_publ_Author_FK");

                    b.HasOne("PublishActivity.Data.Models.StructuralPart", "StructuralPartIdPartNavigation")
                        .WithMany()
                        .HasForeignKey("StructuralPartIdPart")
                        .IsRequired()
                        .HasConstraintName("Author_publ_structural_part_FK");

                    b.Navigation("AuthorU");

                    b.Navigation("StructuralPartIdPartNavigation");
                });

            modelBuilder.Entity("PublishActivity.Data.Models.CategoryEdit", b =>
                {
                    b.HasOne("PublishActivity.Data.Models.Edition", "EditionIdEdtNavigation")
                        .WithMany()
                        .HasForeignKey("EditionIdEdt")
                        .IsRequired()
                        .HasConstraintName("FK_category_edit_edition");

                    b.HasOne("PublishActivity.Data.Models.SprHeading", "SprHeadingIdHeadingNavigation")
                        .WithMany()
                        .HasForeignKey("SprHeadingIdHeading")
                        .IsRequired()
                        .HasConstraintName("category_edit_Spr_heading_FK");

                    b.Navigation("EditionIdEdtNavigation");

                    b.Navigation("SprHeadingIdHeadingNavigation");
                });

            modelBuilder.Entity("PublishActivity.Data.Models.Edition", b =>
                {
                    b.HasOne("PublishActivity.Data.Models.Language", "EdnIdLanguageNavigation")
                        .WithMany("Editions")
                        .HasForeignKey("EdnIdLanguage")
                        .HasConstraintName("FK_edition_language");

                    b.HasOne("PublishActivity.Data.Models.PublishingOffice", "EdnIdPboNavigation")
                        .WithMany("Editions")
                        .HasForeignKey("EdnIdPbo")
                        .IsRequired()
                        .HasConstraintName("FK_edition_publishing_office");

                    b.HasOne("PublishActivity.Data.Models.LevelEdition", "IdEditionNavigation")
                        .WithMany("Editions")
                        .HasForeignKey("IdEdition")
                        .HasConstraintName("FK_edition_level_Edition");

                    b.HasOne("PublishActivity.Data.Models.SprFormatInfo", "SprFormatInfoTypeEdNavigation")
                        .WithMany("Editions")
                        .HasForeignKey("SprFormatInfoTypeEd")
                        .HasConstraintName("FK_edition_Spr_formatInfo");

                    b.Navigation("EdnIdLanguageNavigation");

                    b.Navigation("EdnIdPboNavigation");

                    b.Navigation("IdEditionNavigation");

                    b.Navigation("SprFormatInfoTypeEdNavigation");
                });

            modelBuilder.Entity("PublishActivity.Data.Models.IdAuthor", b =>
                {
                    b.HasOne("PublishActivity.Data.Models.Author", "AuthorU")
                        .WithMany()
                        .HasForeignKey("AuthorUid")
                        .IsRequired()
                        .HasConstraintName("id_Author_Author_FK");

                    b.HasOne("PublishActivity.Data.Models.SprIdAuthor", "SprIdAuthorsIdIasNavigation")
                        .WithMany()
                        .HasForeignKey("SprIdAuthorsIdIas")
                        .IsRequired()
                        .HasConstraintName("id_Author_Spr_idAuthors_FK");

                    b.Navigation("AuthorU");

                    b.Navigation("SprIdAuthorsIdIasNavigation");
                });

            modelBuilder.Entity("PublishActivity.Data.Models.IndArticle", b =>
                {
                    b.HasOne("PublishActivity.Data.Models.AnalyticalBase", "AnalyticalBaseIdAbaseNavigation")
                        .WithMany("IndArticles")
                        .HasForeignKey("AnalyticalBaseIdAbase")
                        .IsRequired()
                        .HasConstraintName("IndArticles_AnalyticalBase_FK");

                    b.Navigation("AnalyticalBaseIdAbaseNavigation");
                });

            modelBuilder.Entity("PublishActivity.Data.Models.IndJournal", b =>
                {
                    b.HasOne("PublishActivity.Data.Models.AnalyticalBase", "AnalyticalBaseIdAbaseNavigation")
                        .WithMany("IndJournals")
                        .HasForeignKey("AnalyticalBaseIdAbase")
                        .IsRequired()
                        .HasConstraintName("Ind_Journal_AnalyticalBase_FK");

                    b.Navigation("AnalyticalBaseIdAbaseNavigation");
                });

            modelBuilder.Entity("PublishActivity.Data.Models.IndicatArticle", b =>
                {
                    b.HasOne("PublishActivity.Data.Models.IndArticle", "IndArticlesIdIndPrtNavigation")
                        .WithMany()
                        .HasForeignKey("IndArticlesIdIndPrt")
                        .IsRequired()
                        .HasConstraintName("indicat_articles_IndArticles_FK");

                    b.HasOne("PublishActivity.Data.Models.StructuralPart", "StructuralPartIdPartNavigation")
                        .WithMany()
                        .HasForeignKey("StructuralPartIdPart")
                        .IsRequired()
                        .HasConstraintName("indicat_articles_structural_part_FK");

                    b.Navigation("IndArticlesIdIndPrtNavigation");

                    b.Navigation("StructuralPartIdPartNavigation");
                });

            modelBuilder.Entity("PublishActivity.Data.Models.RetingJournal", b =>
                {
                    b.HasOne("PublishActivity.Data.Models.Edition", "IdEdtNavigation")
                        .WithMany()
                        .HasForeignKey("IdEdt")
                        .HasConstraintName("FK_reting_Journal_edition");

                    b.HasOne("PublishActivity.Data.Models.IndJournal", "IndJournalIdIndJNavigation")
                        .WithMany()
                        .HasForeignKey("IndJournalIdIndJ")
                        .IsRequired()
                        .HasConstraintName("reting_Journal_Ind_Journal_FK");

                    b.Navigation("IdEdtNavigation");

                    b.Navigation("IndJournalIdIndJNavigation");
                });

            modelBuilder.Entity("PublishActivity.Data.Models.SprThematic", b =>
                {
                    b.HasOne("PublishActivity.Data.Models.SprHeading", "IdHeadingNavigation")
                        .WithMany("SprThematics")
                        .HasForeignKey("IdHeading")
                        .IsRequired()
                        .HasConstraintName("FK_Spr_thematic_Spr_heading");

                    b.Navigation("IdHeadingNavigation");
                });

            modelBuilder.Entity("PublishActivity.Data.Models.SprUser", b =>
                {
                    b.HasOne("PublishActivity.Data.Models.SprRole", "IdRoleNavigation")
                        .WithMany("SprUsers")
                        .HasForeignKey("IdRole")
                        .IsRequired()
                        .HasConstraintName("FK_Spr_Users_Spr_roles");

                    b.Navigation("IdRoleNavigation");
                });

            modelBuilder.Entity("PublishActivity.Data.Models.StructuralPart", b =>
                {
                    b.HasOne("PublishActivity.Data.Models.Edition", "EditionIdEdtNavigation")
                        .WithMany("StructuralParts")
                        .HasForeignKey("EditionIdEdt")
                        .IsRequired()
                        .HasConstraintName("FK_structural_part_edition");

                    b.HasOne("PublishActivity.Data.Models.Language", "IdLanguageNavigation")
                        .WithMany("StructuralParts")
                        .HasForeignKey("IdLanguage")
                        .HasConstraintName("FK_structural_part_language");

                    b.HasOne("PublishActivity.Data.Models.SprStructure", "SprStructureIdTypePartNavigation")
                        .WithMany("StructuralParts")
                        .HasForeignKey("SprStructureIdTypePart")
                        .IsRequired()
                        .HasConstraintName("structural_part_Spr_structure_FK");

                    b.Navigation("EditionIdEdtNavigation");

                    b.Navigation("IdLanguageNavigation");

                    b.Navigation("SprStructureIdTypePartNavigation");
                });

            modelBuilder.Entity("PublishActivity.Data.Models.SubjectsHead", b =>
                {
                    b.HasOne("PublishActivity.Data.Models.SprThematic", "IdThematicNavigation")
                        .WithMany()
                        .HasForeignKey("IdThematic")
                        .IsRequired()
                        .HasConstraintName("FK_Subjects_head_Spr_thematic");

                    b.HasOne("PublishActivity.Data.Models.StructuralPart", "StructuralPartIdPartNavigation")
                        .WithMany()
                        .HasForeignKey("StructuralPartIdPart")
                        .IsRequired()
                        .HasConstraintName("Subjects_head_structural_part_FK");

                    b.Navigation("IdThematicNavigation");

                    b.Navigation("StructuralPartIdPartNavigation");
                });

            modelBuilder.Entity("PublishActivity.Data.Models.UiaArticle", b =>
                {
                    b.HasOne("PublishActivity.Data.Models.SprIdEdition", "SprIdEditionIdUiaNavigation")
                        .WithMany()
                        .HasForeignKey("SprIdEditionIdUia")
                        .IsRequired()
                        .HasConstraintName("UIA_articles_Spr_IdEdition_FK");

                    b.HasOne("PublishActivity.Data.Models.StructuralPart", "StructuralPartIdPartNavigation")
                        .WithMany()
                        .HasForeignKey("StructuralPartIdPart")
                        .IsRequired()
                        .HasConstraintName("UIA_articles_structural_part_FK");

                    b.Navigation("SprIdEditionIdUiaNavigation");

                    b.Navigation("StructuralPartIdPartNavigation");
                });

            modelBuilder.Entity("PublishActivity.Data.Models.AnalyticalBase", b =>
                {
                    b.Navigation("IndArticles");

                    b.Navigation("IndJournals");
                });

            modelBuilder.Entity("PublishActivity.Data.Models.Edition", b =>
                {
                    b.Navigation("StructuralParts");
                });

            modelBuilder.Entity("PublishActivity.Data.Models.Language", b =>
                {
                    b.Navigation("Editions");

                    b.Navigation("StructuralParts");
                });

            modelBuilder.Entity("PublishActivity.Data.Models.LevelEdition", b =>
                {
                    b.Navigation("Editions");
                });

            modelBuilder.Entity("PublishActivity.Data.Models.OfficeDepart", b =>
                {
                    b.Navigation("Authors");
                });

            modelBuilder.Entity("PublishActivity.Data.Models.PublishingOffice", b =>
                {
                    b.Navigation("Editions");
                });

            modelBuilder.Entity("PublishActivity.Data.Models.SprFormatInfo", b =>
                {
                    b.Navigation("Editions");
                });

            modelBuilder.Entity("PublishActivity.Data.Models.SprHeading", b =>
                {
                    b.Navigation("SprThematics");
                });

            modelBuilder.Entity("PublishActivity.Data.Models.SprRole", b =>
                {
                    b.Navigation("SprUsers");
                });

            modelBuilder.Entity("PublishActivity.Data.Models.SprStructure", b =>
                {
                    b.Navigation("StructuralParts");
                });
#pragma warning restore 612, 618
        }
    }
}
